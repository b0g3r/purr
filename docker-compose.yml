version: '2.4'

services:
  worker:
    depends_on:
      - redis
    image: ${APP_REGISTRY}/${APP_IMAGE_NAME}:${APP_IMAGE_VERSION}
    stop_grace_period: 2m
    restart: always
    tty: true # Colorize logs
    env_file:
      - ./.env
    command:
      - ./src/cli.js
      - worker
      - check

  server:
    depends_on:
      - redis
    image: ${APP_REGISTRY}/${APP_IMAGE_NAME}:${APP_IMAGE_VERSION}
    restart: always
    tty: true # Colorize logs
    env_file:
      - ./.env
    command:
      - ./src/cli.js
      - server
      - start
    labels:
      - traefik.enable=true
      - traefik.http.routers.purr.rule=Host(`purr.traefik.lcl`)


  storage:
    image: nginx:alpine
    restart: always
    tty: true # Colorize logs
    env_file:
      - ./.env
    volumes:
      # TODO: fix permission if ./storage not exists
      - ./storage:/usr/share/nginx/html/storage:ro
    labels:
     - traefik.enable=true
     - traefik.http.routers.purr-storage.rule=Host(`purr.traefik.lcl`) && PathPrefix(`/storage`)

  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  redis:
    image: redis
    restart: always
